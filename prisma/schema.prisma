// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// generator erd {
//   provider = "prisma-erd-generator"
//   output = "../prisma/ERD.svg"
//   theme = "neutral"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// many to many relationship
model Subscription {
  subscriptionId    String  @id @default("email")
  users User[]
}
model Quote {
  id            String      @default(cuid()) @id
  quote         String      @unique
  quoteAuthor   String?
  quoteTag      String?
  registeredAt  DateTime    @default(now()) @map(name: "registered_at")
  users User[]
}

// nextauth
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  
  phone             String?       @unique
  subscribedAt      DateTime      @default(now()) @map(name: "subscribed_at")  
  subscriptions     Subscription[]
  saved_quotes      Quote[]
  // TODO: add a subscription interval data field
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
